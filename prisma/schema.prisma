// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            Int            @id @default(autoincrement())
    user_name     String         @db.VarChar(256)
    user_password String         @db.VarChar(256)
    user_email    String         @db.VarChar(256)
    user_role     String         @db.VarChar(256)
    created_at    DateTime       @default(now())
    ChatSession   ChatSession[]
    Forum         Forum[]
    ForumComment  ForumComment[]
}

model ChatSession {
    id              Int           @id @default(autoincrement())
    user_id         Int
    monetary_appeal String?
    urgency         String?
    User            User          @relation(fields: [user_id], references: [id], onDelete: Cascade)
    created_at      DateTime      @default(now())
    ChatMessage     ChatMessage[]
}

model ChatMessage {
    id          Int         @id @default(autoincrement())
    session_id  Int
    text        String
    created_at  DateTime    @default(now())
    ChatSession ChatSession @relation(fields: [session_id], references: [id], onDelete: Cascade)
}

model Forum {
    id          Int      @id @default(autoincrement())
    user_id     Int
    title       String
    description String
    image_id    String?
    created_at  DateTime @default(now())

    User         User           @relation(fields: [user_id], references: [id], onDelete: Cascade)
    ForumTag     ForumTag[]
    ForumComment ForumComment[]
    Image        Image?         @relation(fields: [image_id], references: [id], onDelete: Cascade)
}

model ForumTag {
    id       Int @id @default(autoincrement())
    forum_id Int
    tag_id   Int

    Forum Forum @relation(fields: [forum_id], references: [id], onDelete: Cascade)
}

model ForumComment {
    id         Int      @id @default(autoincrement())
    forum_id   Int
    user_id    Int
    text       String
    upvote     Int      @default(0)
    downvote   Int      @default(0)
    created_at DateTime @default(now())

    Forum Forum @relation(fields: [forum_id], references: [id], onDelete: Cascade)
    User  User  @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Image {
    id        String   @id @default(cuid())
    url       String
    createdAt DateTime @default(now())
    Forum     Forum[]
}

// npx prisma migrate dev --name xx
